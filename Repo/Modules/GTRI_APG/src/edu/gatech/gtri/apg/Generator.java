package edu.gatech.gtri.apg;

import java.io.File;
import java.io.FileOutputStream;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

public class Generator {

	private final String filename;
	private final String appName;
	
	public Generator(String filename, String appName) {
		this.filename = filename;
		this.appName = appName;
	}
	
	public void run() throws Exception {
		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder = dbf.newDocumentBuilder();
		Document doc = builder.parse(new File(filename));
		
		//get list of "uses-permission" elements
		Element docElement = doc.getDocumentElement();
		NodeList permissionNL = docElement.getElementsByTagName("uses-permission");
		if(permissionNL == null || permissionNL.getLength() <= 0) {
			System.out.println("no permissions declared");
			System.exit(0);
		}
		
		//get list of "application" sub elements
		NodeList appNL = docElement.getElementsByTagName("application");
		if(appNL == null || appNL.getLength() != 1) {
			System.err.println("error reading the \"application\" element");
			System.exit(0);
		}
		Element appElement = (Element)appNL.item(0);
		NodeList componentNL = appElement.getChildNodes();
		if(componentNL == null || componentNL.getLength() <= 0) {
			System.out.println("no application components declared");
			System.exit(0);
		}
		
		//generate a custom permission and apply to each "application" sub element
		String customPermissionName = appName + ".permission.APG_Permission";
		Element customPermissionElement = doc.createElement("permission");
		customPermissionElement.setAttribute("android:name", customPermissionName);
		customPermissionElement.setAttribute("android:label", "APG Dangerous Permission");
		customPermissionElement.setAttribute("android:description",
				"Dangerous Permission generated by the Android Permission Generator");
		customPermissionElement.setAttribute("android:protectionLevel", "dangerous");
		doc.getFirstChild().appendChild(customPermissionElement);
		
		for(int i = 0; i < componentNL.getLength(); i++) {
			Object obj = componentNL.item(i);
			if(!(obj instanceof Element))
				continue;
			Element componentElement = (Element)obj;

			//determine if the "android:permission" attributes already exists on this component
			String attrStr = componentElement.getAttribute("android:permission");
			if(attrStr != null && !attrStr.isEmpty()) {
				continue;
			}
			
			componentElement.setAttribute("android:permission", customPermissionName);
		}
		
		//write to file
		String newFilename = filename + "2.xml";
		TransformerFactory tFactory = TransformerFactory.newInstance();
		Transformer transformer = tFactory.newTransformer();

		DOMSource source = new DOMSource(doc);
		FileOutputStream fos = new FileOutputStream(new File(newFilename));
		StreamResult result = new StreamResult(fos);
		transformer.transform(source, result);
		fos.close();
		/**
		 * Call the APG from plugin: 
		 */
		
		
		
		
		
		
	}
	
	private static void printUsageAndExit() {
		System.out.println("Usage:");
		System.out.println("\tjava Generator <path/to/AndroidManifest.xml> <application_name>");
		System.exit(0);
	}
	
	public static void main(String[] args) throws Exception {
		if(args.length != 2) {
			printUsageAndExit();
		}
		
		String fn = args[0];
		String appName = args[1];
		
		new Generator(fn, appName).run();
	}
}

